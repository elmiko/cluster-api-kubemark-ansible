---
- name: Update system
  hosts: all
  become: yes
  become_method: sudo
  become_user: root

  tasks:
    - name: Install python3-docker from apt
      ansible.builtin.apt:
        pkg: python3-docker
        state: present

- name: Add tools for building code
  hosts: all
  become: yes
  become_method: sudo
  become_user: root

  tasks:
    - name: Install make and gcc from apt
      ansible.builtin.apt:
        pkg:
          - make
          - gcc
        state: present

    - name: Install go language from snap
      community.general.snap:
        name: go
        classic: yes
        state: present

- name: Configure docker for devel user
  hosts: all
  become: yes
  become_method: sudo
  become_user: root

  tasks:
    - name: Install docker.io from apt
      ansible.builtin.apt:
        name: docker.io
        state: present

    - name: Add "{{ devel_user }}" to docker group
      ansible.builtin.user:
        name: "{{ devel_user }}"
        groups: docker
        append: yes

- name: Add Kubernetes related tools
  hosts: all
  become: yes
  become_user: "{{ devel_user }}"

  tasks:
    - name: Make local bin directory
      ansible.builtin.file:
        path: "$HOME/bin"
        state: directory
        mode: "0755"

    - name: Add home bin to path
      ansible.builtin.shell: echo "if [ -d \"\$HOME/bin\" ]; then PATH=\"\$HOME/bin:\$PATH\"; fi" >> "$HOME/.profile"

    - name: Get kubectl version
      ansible.builtin.uri:
        url: https://dl.k8s.io/release/stable.txt
        return_content: yes
      register: kubectl_version

    - name: "Download kubectl version {{ kubectl_version.content }}"
      ansible.builtin.get_url:
        url: "https://dl.k8s.io/release/{{ kubectl_version.content }}/bin/linux/amd64/kubectl"
        dest: "$HOME/bin/kubectl"
        mode: u+x

    - name: Get GOOS setting
      ansible.builtin.shell: go env GOOS
      register: go_goos

    - name: Get GOARCH setting
      ansible.builtin.shell: go env GOARCH
      register: go_goarch

    - name: Download latest kubebuilder
      ansible.builtin.get_url:
        url: "https://go.kubebuilder.io/dl/latest/{{ go_goos.stdout }}/{{ go_goarch.stdout }}"
        dest: "$HOME/bin/kubebuilder"
        mode: u+x

    - name: Download kustomize installer script
      ansible.builtin.get_url:
        url: "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"
        dest: "$HOME/bin/install_kustomize.sh"
        mode: u+x

    - name: Run kustomize installer script
      ansible.builtin.shell: $HOME/bin/install_kustomize.sh $HOME/bin

    - name: Download latest kind version
      ansible.builtin.get_url:
        url: "https://kind.sigs.k8s.io/dl/v0.17.0/kind-linux-amd64"
        dest: "$HOME/bin/kind"
        mode: u+x

- name: Checkout Cluster API repositories
  hosts: all
  become: yes
  become_user: "{{ devel_user }}"

  tasks:
    - name: "cluster-api @ {{ cluster_api_version }}"
      ansible.builtin.git:
        repo: "{{ cluster_api_repo }}"
        dest: "$HOME/cluster-api"
        version: "{{ cluster_api_version }}"
        depth: 1

    - name: "cluster-api-provider-kubemark @ {{ provider_kubemark_version }}"
      ansible.builtin.git:
        repo: "{{ provider_kubemark_repo }}"
        dest: "$HOME/cluster-api-provider-kubemark"
        version: "{{ provider_kubemark_version }}"
        depth: 1

- name: Configure localhost kind docker registry
  hosts: all
  become: yes
  become_user: "{{ devel_user }}"
  vars:
    reg_name: kind-registry
    reg_port: "5000"

  tasks:
    - name: Create kind network
      community.docker.docker_network:
        name: kind

    - name: "Create {{ reg_name }} network"
      community.docker.docker_network:
        name: "{{ reg_name }}"

    - name: "Create {{ reg_name }} container"
      community.docker.docker_container:
        name: "{{ reg_name }}"
        image: docker.io/library/registry:2
        state: started
        restart_policy: always
        ports:
          - "127.0.0.1:{{ reg_port }}:5000"
        detach: yes
        networks:
          - name: kind
          - name: "{{ reg_name }}"

